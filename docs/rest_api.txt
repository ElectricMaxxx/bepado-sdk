REST-API Bepado Platform
========================

Some of the SDK calls to bepado can be done without the SDK, using the REST-API.
The SDK has convenience methods for these calls if you are using PHP anyways.

Authentication
--------------

Authentication to the REST API happens via HTTP headers using HMAC-SHA512.
With every request you have to transmit:

    X-Bepado-ShopId: Id
    X-Bepado-Key: HMAC-Key

The shop id can be found in the bepado "Exchange" (Synchronization) tab
in your account. The Key is a computed value using the bepado API Key.

The HMAC Key is generatd using SHA-512 as an algorihtm, the secret is the bepado API Key
and the payload is the JSON formatted body. The PHP code to build the secret is:

    $data = array('pay' => 'load');
    $payload = json_encode($data);
    $key = hash_hmac('sha512', $payload, $apiKey);

Update Order Status
-------------------

As a supplier (Lieferant) I can update the status of a bepado order so that
the dealer (HÃ¤ndler) and end-customer can be informed about changes.

Endpoint: https://sn.bepado.de/sdk/update-order-status
Method: POST
Payload:

- `id` - The order ID of the transaction that was generated by the supplier
- `status` - One of `open`, `in_process`, `delivered`, `canceled` or `error`.
- `tracking` - A structure with keys `id`, `url` and `vendor`. The value is optional

Example:

    POST https://sn.bepado.de/sdk/update-order-status
    X-Bepado-ShopId: 1
    X-Bepado-Key: abcdefg

    {
        "id": "1234",
        "status": "in_process",
        "tracking": {"id": "ABCDEFG1234567890"}
    }

Register Event Hooks
--------------------

bepado provides event hooks for events. Whenever something interesting happens inside bepado
you may opt-in to get notified about these events via Webhook (XML over HTTP POST).

Currently the following events exist:

- `order_created` is triggered when an order was created through bepado. It will be published to both parties (supplier and dealer) when they have a hook registered. The dealer can recieve multiple events for the same order when different suppliers took part in the transaction.

Endpoint: https://sn.bepado.de/sdk/hooks
Method: POST/DELETE
Payload:

- `eventName` - Name of the event to register a hook url to
- `url` - URL where to send the hook to.

Example:

    POST https://sn.bepado.de/sdk/hooks
    X-Bepado-ShopId: 1
    X-Bepado-Key: abcdefg

    {
        "eventName": "order_created",
        "url": "http://example.com/my_hook.php"
    }

Security of hooks: When bepado notifies your url of an event, it uses the X-Bepado-ShopId and X-Bepado-Key headers as well. You can use them to verify
that it was really bepado that sent you the event and not some malicous third party.
